---
source: tests/transform.rs
expression: element.transform()
---
Element {
    tag: Native(
        "div",
    ),
    attrs: [
        Attr {
            key: NSAttr {
                ns: "ns",
                name: "name",
            },
            value: Lit(
                Str(
                    Str {
                        span: Span {
                            lo: BytePos(
                                14,
                            ),
                            hi: BytePos(
                                21,
                            ),
                            ctxt: #0,
                        },
                        value: Atom('value' type=inline),
                        raw: Some(
                            "\"value\"",
                        ),
                    },
                ),
            ),
        },
    ],
    children: [],
    raw: JSXElement {
        span: Span {
            lo: BytePos(
                1,
            ),
            hi: BytePos(
                28,
            ),
            ctxt: #0,
        },
        opening: JSXOpeningElement {
            name: Ident(
                Ident {
                    span: Span {
                        lo: BytePos(
                            2,
                        ),
                        hi: BytePos(
                            5,
                        ),
                        ctxt: #0,
                    },
                    sym: Atom('div' type=static),
                    optional: false,
                },
            ),
            span: Span {
                lo: BytePos(
                    1,
                ),
                hi: BytePos(
                    22,
                ),
                ctxt: #0,
            },
            attrs: [
                JSXAttr(
                    JSXAttr {
                        span: Span {
                            lo: BytePos(
                                6,
                            ),
                            hi: BytePos(
                                21,
                            ),
                            ctxt: #0,
                        },
                        name: JSXNamespacedName(
                            JSXNamespacedName {
                                ns: Ident {
                                    span: Span {
                                        lo: BytePos(
                                            6,
                                        ),
                                        hi: BytePos(
                                            8,
                                        ),
                                        ctxt: #0,
                                    },
                                    sym: Atom('ns' type=inline),
                                    optional: false,
                                },
                                name: Ident {
                                    span: Span {
                                        lo: BytePos(
                                            9,
                                        ),
                                        hi: BytePos(
                                            13,
                                        ),
                                        ctxt: #0,
                                    },
                                    sym: Atom('name' type=static),
                                    optional: false,
                                },
                            },
                        ),
                        value: Some(
                            Lit(
                                Str(
                                    Str {
                                        span: Span {
                                            lo: BytePos(
                                                14,
                                            ),
                                            hi: BytePos(
                                                21,
                                            ),
                                            ctxt: #0,
                                        },
                                        value: Atom('value' type=inline),
                                        raw: Some(
                                            "\"value\"",
                                        ),
                                    },
                                ),
                            ),
                        ),
                    },
                ),
            ],
            self_closing: false,
            type_args: None,
        },
        children: [],
        closing: Some(
            JSXClosingElement {
                span: Span {
                    lo: BytePos(
                        22,
                    ),
                    hi: BytePos(
                        28,
                    ),
                    ctxt: #0,
                },
                name: Ident(
                    Ident {
                        span: Span {
                            lo: BytePos(
                                24,
                            ),
                            hi: BytePos(
                                27,
                            ),
                            ctxt: #0,
                        },
                        sym: Atom('div' type=static),
                        optional: false,
                    },
                ),
            },
        ),
    },
    is_static: true,
}
